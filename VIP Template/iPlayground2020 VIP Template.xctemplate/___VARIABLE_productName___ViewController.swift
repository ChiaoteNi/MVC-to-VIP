//
//  ___FILEBASENAME___.swift
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ iOS@Taipei in iPlayground 2020. All rights reserved.
//
//  This file was generated by iOS@Taipei's Clean Architecture Xcode Templates, which
//  is goaled to help you apply clean architecture to your iOS projects,
//

import UIKit

protocol ___VARIABLE_productName___DisplayLogic: AnyObject {
//    func displaySomething(viewModel: ___VARIABLE_productName___.<#T##EventName#>.<#T##ViewModelName#>)
}

final class ___VARIABLE_productName___ViewController: UIViewController, ___VARIABLE_productName___DisplayLogic {
    
    private var interactor: ___VARIABLE_productName___BusinessLogic?
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        setup()
    }
    
    // MARK: - Setup
    
    private func setup() {
        let presenter: ___VARIABLE_productName___Presenter = .init(with: self)
        let interactor: ___VARIABLE_productName___Interactor = .init(with: presenter)
        self.interactor = interactor
    }
    
    // MARK: - Use cases
    
//    func displaySomething(viewModel: ___VARIABLE_productName___.<#T##EventName#>.<#T##ViewModelName#>) {
//
//    }
}

// MARK: - Private functions.
extension ___VARIABLE_productName___ViewController {
    
}

// MARK: - Constants
extension ___VARIABLE_productName___ViewController {
    
}
